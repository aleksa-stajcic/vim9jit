---
source: crates/vim9-lexer/src/lib.rs
assertion_line: 767
expression: snapshot_lexing(contents)
---
vim9script
^^^^^^^^^^ Token(Identifier, "vim9script", (0,0)->(0,10))
           Token(EndOfLine, "\n", (0,10)->(0,10))

 Token(EndOfLine, "\n", (1,0)->(1,0))
var x = "hello"
^^^ Token(Identifier, "var", (2,0)->(2,3))
    ^ Token(Identifier, "x", (2,4)->(2,5))
      ^ Token(Equal, "=", (2,6)->(2,7))
         ^^^^ Token(DoubleQuoteString, "hello", (2,9)->(2,13))
                Token(EndOfLine, "\n", (2,15)->(2,15))

 Token(EndOfLine, "\n", (3,0)->(3,0))
const CD_COMMAND: string = $'[lt]\=cd!\=\s\+-{END_OF_COMMAND}'
^^^^^ Token(Identifier, "const", (4,0)->(4,5))
      ^^^^^^^^^^ Token(Identifier, "CD_COMMAND", (4,6)->(4,16))
                ^^ Token(SpacedColon, ": ", (4,16)->(4,18))
                  ^^^^^^ Token(Identifier, "string", (4,18)->(4,24))
                         ^ Token(Equal, "=", (4,25)->(4,26))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Token(InterpolatedLiteralString, "[lt]\\=cd!\\=\\s\\+-{END_OF_COMMAND}", (4,29)->(4,60))
                                                               Token(EndOfLine, "\n", (4,62)->(4,62))
const X_COMMAND: string = $"{x}"
^^^^^ Token(Identifier, "const", (5,0)->(5,5))
      ^^^^^^^^^ Token(Identifier, "X_COMMAND", (5,6)->(5,15))
               ^^ Token(SpacedColon, ": ", (5,15)->(5,17))
                 ^^^^^^ Token(Identifier, "string", (5,17)->(5,23))
                        ^ Token(Equal, "=", (5,24)->(5,25))
                            ^^^^ Token(InterpolatedString, "{x}\"\n", (5,28)->(5,32))


