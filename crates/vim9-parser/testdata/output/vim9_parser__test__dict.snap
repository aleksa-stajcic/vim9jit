---
source: src/lib.rs
assertion_line: 1380
expression: snapshot_parsing(contents)
---
[
    Vim9Script(
        Vim9ScriptCommand {
            noclear: false,
            eol: Token(EndOfLine, "\n", (0,10)->(0,10)),
        },
    ),
    Var(
        VarCommand {
            var: Token(Identifier, "var", (2,0)->(2,3)),
            ty: None,
            name: Raw(x),
            equal: Token(Equal, "=", (2,6)->(2,7)),
            expr: Dict(
                DictLiteral {
                    open: Token(LeftBrace, "{", (2,8)->(2,9)),
                    elements: [
                        KeyValue {
                            key: Literal(
                                Literal {
                                    token: Token(Identifier, "hello", (2,10)->(2,15)),
                                },
                            ),
                            colon: Token(SpacedColon, ": ", (2,15)->(2,17)),
                            value: String(
                                DoubleQuote(
                                    "world",
                                ),
                            ),
                        },
                        KeyValue {
                            key: Literal(
                                Literal {
                                    token: Token(Identifier, "another", (2,26)->(2,33)),
                                },
                            ),
                            colon: Token(SpacedColon, ": ", (2,33)->(2,35)),
                            value: Boolean(
                                VimBoolean {
                                    token: Token(False, "false", (2,35)->(2,40)),
                                    value: false,
                                },
                            ),
                        },
                    ],
                    close: Token(RightBrace, "}", (2,41)->(2,42)),
                },
            ),
            eol: Token(EndOfLine, "\n", (2,42)->(2,42)),
        },
    ),
    Var(
        VarCommand {
            var: Token(Identifier, "var", (3,0)->(3,3)),
            ty: None,
            name: Raw(y),
            equal: Token(Equal, "=", (3,6)->(3,7)),
            expr: Call(
                f: Identifier(Raw(len)) arg: [
                    Call(
                        f: Identifier(Raw(nvim_get_autcomds)) arg: [
                            Dict(
                                DictLiteral {
                                    open: Token(LeftBrace, "{", (3,30)->(3,31)),
                                    elements: [
                                        KeyValue {
                                            key: Literal(
                                                Literal {
                                                    token: Token(Identifier, "group", (3,31)->(3,36)),
                                                },
                                            ),
                                            colon: Token(SpacedColon, ": ", (3,36)->(3,38)),
                                            value: String(
                                                DoubleQuote(
                                                    "matchparen",
                                                ),
                                            ),
                                        },
                                    ],
                                    close: Token(RightBrace, "}", (3,50)->(3,51)),
                                },
                            ),
                        ],
                    ),
                ],
            ),
            eol: Token(EndOfLine, "\n", (3,53)->(3,53)),
        },
    ),
]
